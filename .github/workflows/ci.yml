name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  linter:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Run pre-commit
        uses: pre-commit/action@v3.0.0

  pytest:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: postgres

    env:
      DATABASE_URL: "postgres://postgres:postgres@localhost:5432/postgres"

    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: pipenv

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
      - name: Cache pipenv virtualenv
        id: cache-pipenv
        uses: actions/cache@v3
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-1-${{ hashFiles('**/Pipfile.lock') }}
      - name: Install dependencies
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: pipenv install --dev
      - name: Test with pytest
        run: pipenv run pytest
  deploy:
    runs-on: ubuntu-latest
    needs: [ linter, pytest ]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install pipenv
        run: |
          pip install pipenv
      - name: Cache pipenv virtualenv
        id: cache-pipenv
        uses: actions/cache@v3
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}
      - name: Deploy
        run: |
          chmod +x zappa_deploy.sh
          pipenv run ./zappa_deploy.sh
    
